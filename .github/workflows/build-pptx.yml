name: Build PPTX (RTL fixed)
on:
  push:
    branches: [ "main" ]
permissions:
  contents: write
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create generator files (requirements + Python script)
        shell: bash
        run: |
          mkdir -p scripts assets output

          cat > requirements.txt << 'REQ'
          python-pptx==0.6.23
          matplotlib==3.9.2
          pandas==2.2.2
          numpy==2.0.2
          Pillow==10.4.0
          requests==2.32.3
          arabic-reshaper==3.0.0
          python-bidi==0.4.2
          REQ

          cat > scripts/build_presentation.py << 'PY'
          # -*- coding: utf-8 -*-
          import os, requests
          from pptx import Presentation
          from pptx.util import Inches, Pt
          from pptx.enum.text import PP_ALIGN
          from pptx.dml.color import RGBColor
          from pptx.enum.shapes import MSO_SHAPE
          import matplotlib, matplotlib.pyplot as plt
          from matplotlib import font_manager
          import numpy as np
          import arabic_reshaper
          from bidi.algorithm import get_display

          # Paths
          os.makedirs("output", exist_ok=True)
          os.makedirs("assets", exist_ok=True)

          # Colors
          BLUE  = RGBColor(30, 76, 120)
          GREEN = RGBColor(88, 142, 38)
          OLIVE = RGBColor(120, 158, 73)
          GRAY  = RGBColor(70, 70, 70)

          # Fonts (PPT text) — Vazirmatn preferred, fallback to Arial
          FONT_NAME = "Vazirmatn"
          def ensure_font():
            ttf = "assets/Vazirmatn-Regular.ttf"
            if not os.path.exists(ttf):
              try:
                url = "https://github.com/rastikerdar/vazirmatn/releases/download/v33.003/Vazirmatn-Regular.ttf"
                r = requests.get(url, timeout=60); r.raise_for_status()
                open(ttf, "wb").write(r.content)
              except Exception:
                pass
            if os.path.exists(ttf):
              font_manager.fontManager.addfont(ttf)
              matplotlib.rcParams["font.sans-serif"] = [FONT_NAME, "DejaVu Sans"]
            else:
              matplotlib.rcParams["font.sans-serif"] = ["DejaVu Sans", "Arial"]
            matplotlib.rcParams["font.family"] = "sans-serif"
            matplotlib.rcParams["axes.unicode_minus"] = False
          ensure_font()

          # Reshape+BiDi for chart texts (images only)
          def fa(x):
            if not x: return x
            try:
              return get_display(arabic_reshaper.reshape(x))
            except Exception:
              return x

          # PowerPoint base
          prs = Presentation()
          prs.slide_width, prs.slide_height = Inches(13.33), Inches(7.5)

          # Helpers
          def style_para(para, text, size=24, bold=False, color=BLUE, align=PP_ALIGN.RIGHT, font_name=FONT_NAME):
            para.text = text
            run = para.runs[0] if para.runs else para.add_run()
            run.font.size = Pt(size); run.font.bold = bold
            run.font.color.rgb = color
            run.font.name = font_name
            para.alignment = align

          def add_title(slide, title):
            box = slide.shapes.add_textbox(Inches(0.6), Inches(0.5), Inches(12.2), Inches(0.9))
            p = box.text_frame.paragraphs[0]
            style_para(p, title, size=30, bold=True)
            return box

          def draw_banner(slide, color=OLIVE):
            shape = slide.shapes.add_shape(MSO_SHAPE.RECTANGLE, Inches(0), Inches(0), prs.slide_width, Inches(0.15))
            shape.fill.solid(); shape.fill.fore_color.rgb = color
            shape.line.color.rgb = color
            shape.shadow.inherit = False

          def bullets_slide(title, bullets, note=None):
            slide = prs.slides.add_slide(prs.slide_layouts[6])
            add_title(slide, title)
            tx = slide.shapes.add_textbox(Inches(0.6), Inches(1.5), Inches(12.2), Inches(5.6))
            tf = tx.text_frame; tf.clear()
            for i, b in enumerate(bullets):
              p = tf.add_paragraph() if i else tf.paragraphs[0]
              style_para(p, b, size=24, bold=False, color=GRAY)
            if note:
              slide.notes_slide.notes_text_frame.text = note
            draw_banner(slide)
            return slide

          def add_image(slide, path, left=0.6, top=1.6, width=11.5):
            slide.shapes.add_picture(path, Inches(left), Inches(top), width=Inches(width))
            draw_banner(slide)

          # Charts & Graphics
          def save_fig(fig, path):
            fig.tight_layout(); fig.savefig(path, dpi=240); plt.close(fig)

          def chart_prevalence():
            years = [2000, 2005, 2010, 2015, 2021, 2025]
            world = [151, 194, 226, 342, 537, 643]
            fig, ax = plt.subplots(figsize=(8.2,3.6))
            ax.plot(years, world, marker="o", color="#1f77b4", linewidth=2)
            ax.set_title(fa("روند جهانی دیابت (تقریبی، منبع: اطلس IDF)"))
            ax.set_xlabel(fa("سال")); ax.set_ylabel(fa("میلیون نفر"))
            ax.grid(alpha=0.3); save_fig(fig, "assets/prevalence.png")

          def chart_hba1c():
            labels = [fa("Esposito 2009"), fa("DIRECT 2008\n(زیرگروه T2D)"), fa("Meta-analysis 2013")]
            delta  = [-0.9, -0.5, -0.4]
            fig, ax = plt.subplots(figsize=(8.2,3.6))
            bars = ax.bar(labels, delta, color="#2ca02c")
            ax.axhline(0, color="k", lw=0.8)
            ax.set_ylabel(fa("تغییر HbA1c (%) – مدیترانه‌ای نسبت به مقایسه"))
            for r in bars:
              ax.text(r.get_x()+r.get_width()/2, r.get_height()-0.05, f"{r.get_height():.1f}",
                      ha="center", va="top", color="white", fontsize=10)
            save_fig(fig, "assets/hba1c.png")

          def chart_inflammation():
            markers = [fa("CRP"), fa("IL-6"), fa("TNF-α")]
            change  = [-25, -12, -10]
            fig, ax = plt.subplots(figsize=(8.2,3.6))
            bars = ax.bar(markers, change, color="#8abf69")
            ax.axhline(0, color="k", lw=0.8)
            ax.set_ylabel(fa("تغییر (%)"))
            ax.set_title(fa("کاهش مارکرهای التهابی با الگوی مدیترانه‌ای (نمونه آموزشی)"))
            for r in bars:
              ax.text(r.get_x()+r.get_width()/2, r.get_height()+(-1.2), f"{int(r.get_height())}%",
                      ha="center", va="top", color="white", fontsize=10)
            save_fig(fig, "assets/inflammation.png")

          def art_pyramid():
            fig, ax = plt.subplots(figsize=(6.5,4.2)); ax.axis("off")
            levels = [fa("سبزیجات/میوه‌ها/غلات کامل/حبوبات"), fa("روغن زیتون/مغزدانه‌ها"),
                      fa("ماهی/لبنیات"), fa("گوشت قرمز/شیرینی‌ها (کم)")]
            colors = ["#e0f2f1","#dcedc8","#fff9c4","#ffe0b2"]
            for i,(lvl,c) in enumerate(zip(levels,colors)):
              ax.add_patch(plt.Rectangle((0.1+i*0.05,0.1+i*0.18),0.8-0.1*i,0.16,color=c,ec="#888"))
              ax.text(0.5,0.18+i*0.18,lvl,ha="center",va="center",fontsize=11)
            ax.set_title(fa("هرم ساده رژیم مدیترانه‌ای")); save_fig(fig, "assets/med_pyramid.png")

          def art_mito():
            fig, ax = plt.subplots(figsize=(6.5,3.8)); ax.axis("off")
            oval = plt.Circle((0.5,0.5),0.46,color="#ffe0b2",ec="#f57c00"); ax.add_patch(oval)
            for x in np.linspace(0.2,0.8,6): ax.plot([x,x],[0.2,0.8],color="#f57c00",lw=2)
            ax.text(0.5,0.1,fa("محافظت میتوکندری (ROS↓, PGC-1α↑)"),ha="center",fontsize=12)
            save_fig(fig, "assets/mito.png")

          def art_nfkb():
            fig, ax = plt.subplots(figsize=(6.5,3.8)); ax.axis("off")
            ax.text(0.5,0.8,fa("NF-κB / NLRP3"),ha="center",fontsize=13,weight="bold")
            ax.arrow(0.2,0.6,0.6,0,head_width=0.03,head_length=0.02,color="#c62828")
            ax.text(0.5,0.62,fa("التهاب سیستمیک"),ha="center",color="#c62828")
            ax.arrow(0.5,0.55,0,-0.25,head_width=0.03,head_length=0.02,color="#2e7d32")
            ax.text(0.52,0.4,fa("مدیترانه‌ای → مهار مسیر"),ha="left",color="#2e7d32")
            save_fig(fig, "assets/nfkb.png")

          def art_gut():
            fig, ax = plt.subplots(figsize=(6.5,3.8)); ax.axis("off")
            ax.text(0.5,0.8,fa("میکروبیوم روده → SCFA (بوتیرات)"),ha="center",fontsize=12)
            ax.arrow(0.2,0.6,0.6,0,head_width=0.03,head_length=0.02,color="#1565c0")
            ax.text(0.5,0.62,fa("GLP-1 ↑  /  حساسیت به انسولین ↑"),ha="center",color="#1565c0")
            ax.arrow(0.5,0.55,0,-0.25,head_width=0.03,head_length=0.02,color="#2e7d32")
            ax.text(0.52,0.4,fa("التهاب مزمن ↓"),ha="left",color="#2e7d32")
            save_fig(fig, "assets/gut_immune.png")

          # Tables
          def sources_table(title, rows):
            slide = prs.slides.add_slide(prs.slide_layouts[6])
            add_title(slide, title)
            cols = ["عنوان مقاله","نوع مطالعه/مدل","جمعیت/نمونه","هدف مطالعه","روش‌ها/طراحی",
                    "نتایج کلیدی","نتیجه‌گیری مرتبط با T2D","محدودیت‌ها/نکات مهم"]
            table = slide.shapes.add_table(len(rows)+1, len(cols), Inches(0.3), Inches(1.3), Inches(12.7), Inches(5.8)).table
            for j,c in enumerate(cols):
              cell = table.cell(0,j); cell.text = c
              style_para(cell.text_frame.paragraphs[0], c, size=18, bold=True, color=RGBColor(255,255,255))
              cell.fill.solid(); cell.fill.fore_color.rgb = GREEN
            for i,row in enumerate(rows, start=1):
              for j,val in enumerate(row):
                cell = table.cell(i,j); cell.text = val
                for p in cell.text_frame.paragraphs:
                  style_para(p, p.text, size=16, bold=False, color=GRAY)
            draw_banner(slide)

          # Build graphics
          def build_assets():
            chart_prevalence(); chart_hba1c(); chart_inflammation()
            art_pyramid(); art_mito(); art_nfkb(); art_gut()

          # Slides content (more details + notes)
          def build_deck():
            build_assets()

            # 1 Title
            slide = prs.slides.add_slide(prs.slide_layouts[6])
            draw_banner(slide, color=OLIVE)
            box = slide.shapes.add_textbox(Inches(0.6), Inches(1.3), Inches(12.2), Inches(2.2))
            tf = box.text_frame
            style_para(tf.paragraphs[0], "تأثیر رژیم غذایی مدیترانه‌ای بر دیابت نوع 2", size=44, bold=True)
            p = tf.add_paragraph(); style_para(p, "ارائه برای رشته علوم تغذیه", size=24, bold=False)

            # 2
            bullets_slide("تعریف و ماهیت دیابت نوع 2", [
              "اختلال مزمن متابولیک با هیپرگلیسمی ناشی از مقاومت به انسولین و نقص ترشح آن",
              "درگیری کبد/عضله/بافت چربی؛ التهاب مزمن خفیف؛ استرس اکسیداتیو؛ دیس‌فانکشن میتوکندری",
              "عوارض: قلبی–عروقی، نفروپاتی، نوروپاتی، رتینوپاتی، کبد چرب غیرالکلی (NAFLD)"
            ], note="T2D = insulin resistance + beta-cell dysfunction")

            # 3
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "اپیدمیولوژی و روند شیوع")
            add_image(s, "assets/prevalence.png", left=0.9, top=1.7, width=10.8)

            # 4
            bullets_slide("عوامل خطر و تفاوت‌های جمعیتی", [
              "سن، سابقه خانوادگی، چاقی مرکزی، کم‌تحرکی",
              "الگوی غذایی پرکالری/فراوری‌شده؛ وضعیت اجتماعی–اقتصادی",
              "تفاوت‌های منطقه‌ای/جغرافیایی در شیوع و سن شروع"
            ])

            # 5
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "روند شیوع در سال‌های اخیر")
            add_image(s, "assets/prevalence.png", left=0.9, top=1.7, width=10.8)

            # 6
            bullets_slide("درمان‌های موجود برای T2D", [
              "اصلاح سبک زندگی (تغذیه، فعالیت بدنی، خواب، مدیریت استرس)",
              "داروها: متفورمین، SGLT2i، GLP-1 RA، انسولین (در صورت نیاز)",
              "محدودیت‌ها: عوارض، هزینه، پایبندی — تغذیه پایه درمان است"
            ])

            # 7
            bullets_slide("درمان‌های مکمل", [
              "مشاوره تغذیه‌ای/رفتاری، آموزش خودمدیریتی، کاهش استرس",
              "مکمل‌ها فقط با شواهد و احتیاط؛ تداخلات دارویی بررسی شود",
              "الگوها: Mediterranean, DASH, Low-carb (انتخاب شخصی‌سازی‌شده)"
            ])

            # 8
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "رژیم مدیترانه‌ای: سوخت متفاوت برای بدن")
            add_image(s, "assets/med_pyramid.png", left=3.0, top=1.7, width=7.5)

            # 9
            bullets_slide("کاربردهای شناخته‌شده رژیم مدیترانه‌ای", [
              "کاهش ریسک CVD، بهبود فشارخون و لیپیدها",
              "بهبود NAFLD، برخی سرطان‌ها، سلامت شناخت و خلق",
              "کاهش خطر دیابت و بهبود کنترل قند در مبتلایان"
            ])

            # 10
            bullets_slide("چرا مدیترانه‌ای برای T2D مفید است؟", [
              "فیبر بالا → کاهش شاخص گلیسمی و افزایش سیری",
              "MUFA/PUFA → بهبود حساسیت به انسولین و پروفایل لیپیدی",
              "پلی‌فنول‌ها → ضدالتهاب/آنتی‌اکسیدان؛ بهبود سیگنالینگ انسولین",
              "تنوع و انعطاف‌پذیری → پایبندی بهتر و پایدارتر"
            ])

            # 11
            bullets_slide("مقدمه مکانیسم‌ها", [
              "مسیرها: التهاب، میتوکندری، گلوتامات/تحریک‌سمّیت، ایمنی، میکروبیوم، هورمون‌های روده",
              "از جزء غذایی → تغییرات مولکولی/سیستمی → پیامدهای بالینی"
            ], note="Concept map across multiple pathways")

            # 12
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "1) کاهش التهاب (Neuroinflammation ↓)")
            add_image(s, "assets/nfkb.png", left=3.2, top=1.7, width=7.0)

            # 13
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "نتیجه کاهش التهاب")
            add_image(s, "assets/inflammation.png", left=1.0, top=1.7, width=10.5)

            # 14
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "2) محافظت میتوکندریایی و بهبود انرژی")
            add_image(s, "assets/mito.png", left=3.0, top=1.7, width=7.5)

            # 15
            bullets_slide("آسیب میتوکندری در T2D", [
              "افزایش ROS و افت تولید ATP، اختلال عملکرد سلول β",
              "لیپوتوکسیسیته و گلوکوتوکسیسیته → مقاومت به انسولین",
              "ارتباط با پیشرفت عوارض میکرو/ماکروواسکولار"
            ])

            # 16
            bullets_slide("متابولیسم در رژیم مدیترانه‌ای", [
              "کنترل بار گلیسمی وعده‌ها؛ کاهش واریانس قند پس از غذا",
              "بهبود پروفایل لیپیدی و نشانگرهای التهابی",
              "کمک به مدیریت وزن و سیری پایدار"
            ])

            # 17
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "اثرات محافظتی بر شاخص‌های بالینی")
            add_image(s, "assets/hba1c.png", left=1.0, top=1.7, width=10.5)

            # 18
            bullets_slide("3) تنظیم سیستم گلوتامات و کاهش Excitotoxicity", [
              "در عوارض عصبی T2D، اختلال تنظیم گلوتامات/NMDA/AMPA گزارش شده",
              "پلی‌فنول‌ها و امگا-3 ممکن است انتقال‌دهنده‌ها/گیرنده‌ها را تعدیل کنند (شواهد پیش‌بالینی)"
            ])

            # 19
            bullets_slide("نتیجه تنظیم گلوتامات", [
              "کاهش بالقوه درد نوروپاتیک/تحریک‌سمّیت",
              "بهبود شناخت/خلق در برخی مطالعات غیر T2D؛ شواهد انسانی مستقیم محدود"
            ])

            # 20
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "مکانیسم مکمل: تعدیل سیستم ایمنی")
            add_image(s, "assets/gut_immune.png", left=1.5, top=1.7, width=9.5)

            # 21
            bullets_slide("4) تعدیل میکروبیوم روده", [
              "افزایش SCFA (بوتیرات) → GLP-1 ↑ و حساسیت به انسولین ↑",
              "افزایش گونه‌های مفید مانند Akkermansia و Faecalibacterium"
            ])

            # 22
            bullets_slide("تأثیر بر متابولیسم سیستمیک", [
              "GLP-1 و PYY ↑ → کنترل اشتها/گلوکز بهتر",
              "سیگنالینگ اسیدهای صفراوی (FXR/TGR5) → بهبود گلوکز/چربی"
            ])

            # 23
            s = prs.slides.add_slide(prs.slide_layouts[6]); add_title(s, "مهار التهاب مزمن و اندوتوکسمی متابولیک")
            add_image(s, "assets/inflammation.png", left=1.0, top=1.7, width=10.5)

            # 24
            bullets_slide("5) پتانسیل تسهیل رمیلیناسیون (عوارض عصبی T2D)", [
              "DHA/EPA و برخی پلی‌فنول‌ها: حمایت از میلین‌سازی (شواهد عمدتاً حیوانی/پیش‌بالینی)",
              "اهمیت در نوروپاتی دیابتی: حفاظت عصبی و ترمیم"
            ])

            # 25
            bullets_slide("اثر بر خلق و سلامت روانی", [
              "الگوی ضدالتهاب با کاهش افسردگی/بهبود خلق مرتبط است → پایبندی بهتر و کنترل قند بهتر",
              "مدیریت استرس/خواب عناصر مکملِ درمان هستند"
            ])

            # 26
            rows1 = [
              ["Esposito et al., 2009, Ann Intern Med","RCT","بیماران تازه‌تشخیص T2D؛ n≈215",
               "اثر رژیم مدیترانه‌ای بر کنترل قند و نیاز به دارو","RCT دوگروهی؛ پیگیری تا 4 سال",
               "HbA1c کاهش بیشتر؛ تأخیر معنی‌دار در شروع دارو؛ کاهش وزن",
               "بهبود کنترل گلیسمی و کاهش نیاز دارو در T2D","تک‌مرکزی؛ پایبندی خودگزارشی"],
              ["Shai et al., 2008, NEJM (DIRECT)","RCT سه‌گروهی","افراد دارای اضافه‌وزن؛ زیرگروه مبتلایان T2D",
               "مقایسه کم‌چرب/مدیترانه‌ای/کم‌کربوهیدرات","24 ماه؛ محیط کاری",
               "در زیرگروه T2D، HbA1c و لیپیدها در مدیترانه‌ای بهتر از کم‌چرب",
               "مزیت مدیترانه‌ای در کنترل قند و پروفایل لیپیدی","تحلیل زیرگروه؛ تعمیم‌پذیری محدود"],
            ]
            sources_table("جدول مقالات - بخش 1", rows1)

            # 27
            rows2 = [
              ["Salas-Salvadó et al., 2011, Diabetes Care (PREDIMED-Reus)","RCT پیشگیری","افراد پرخطر غیر دیابتی؛ n≈418",
               "اثر رژیم مدیترانه‌ای بر بروز T2D","گروه‌های با روغن زیتون/مغزدانه؛ ≈4 سال",
               "کاهش ≈52% در بروز T2D نسبت به کنترل","کاهش معنی‌دار ریسک بروز T2D","زیرمطالعه؛ عوامل سبک زندگی"],
              ["Ajala et al., 2013, Am J Clin Nutr (Meta-analysis)","مرور نظام‌مند و متاآنالیز","بزرگسالان مبتلا به T2D در RCTها",
               "مقایسه رژیم‌ها بر HbA1c/وزن/لیپید","ترکیب نتایج چند مطالعه",
               "بیشترین کاهش HbA1c و بهبود وزن در مدیترانه‌ای","برتری کلی در مدیریت T2D","ناهمگنی و تفاوت مداخلات"],
            ]
            sources_table("جدول مقالات - بخش 2", rows2)

            # 28
            bullets_slide("نتیجه‌گیری کلی از مطالعات", [
              "در مبتلایان: HbA1c ↓، حساسیت انسولین ↑، نیاز به دارو ↓، ریسک CVD ↓",
              "در پیشگیری: کاهش معنی‌دار خطر بروز T2D در جمعیت‌های پرخطر",
              "هم‌سویی مکانیسم‌های زیستی (التهاب، میکروبیوم، میتوکندری) با نتایج بالینی",
              "قابلیت اجرا و پذیرش مناسب در دنیای واقعی"
            ])

            # 29
            bullets_slide("پیشنهادات برای تحقیقات آینده", [
              "RCTهای سر به سر با GLP-1 RA/SGLT2i + مدیترانه‌ای",
              "بیومارکرها: میکروبیوم، متابولومیکس، سیگنالینگ صفراوی",
              "پیامدهای عصبی/شناختی در T2D",
              "راهبردهای ارتقای پایبندی و بومی‌سازی"
            ])

            # 30
            slide = prs.slides.add_slide(prs.slide_layouts[6]); add_title(slide, "منابع و تشکر")
            box = slide.shapes.add_textbox(Inches(0.6), Inches(1.5), Inches(12.2), Inches(5.5))
            tf = box.text_frame
            refs = [
              "Esposito K, et al. Ann Intern Med. 2009;151(5):306–314. doi:10.7326/0003-4819-151-5-200909010-00004",
              "Shai I, et al. N Engl J Med. 2008;359:229–241. doi:10.1056/NEJMoa0708681",
              "Salas-Salvadó J, et al. Diabetes Care. 2011;34(1):14–19. doi:10.2337/dc10-1288",
              "Ajala O, et al. Am J Clin Nutr. 2013;97(3):505–516. doi:10.3945/ajcn.112.042457",
              "نمودار شیوع: الهام از IDF Diabetes Atlas (کار آموزشی)"
            ]
            for i,r in enumerate(refs):
              p = tf.add_paragraph() if i else tf.paragraphs[0]
              style_para(p, r, size=16, bold=False, color=GRAY)
            p = tf.add_paragraph(); style_para(p, "با تشکر از توجه شما", size=18, bold=True, color=BLUE)

            prs.save("output/med-diet-t2d.pptx")

          if __name__ == "__main__":
            build_deck()
          PY

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Build PPTX
        run: python scripts/build_presentation.py

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: med-diet-t2d-presentation
          path: output/med-diet-t2d.pptx

      - name: Commit generated files (PPTX + generator)
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git add scripts/build_presentation.py requirements.txt output/med-diet-t2d.pptx
          git commit -m "Fix RTL charts/tables, unify fonts, add graphics, more details, add slide 1" || echo "nothing to commit"
          git push || echo "push skipped"
